{"version":3,"sources":["TodoItem.js","TodoList.js","index.js"],"names":["TodoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDelete","bind","assertThisInitialized","_this$props","index","content","react_default","a","createElement","className","onClick","React","Component","TodoList","state","list","inputValue","handleInputChange","handleItemClick","handleBtnClick","handleKeyDown","e","setState","target","value","concat","toConsumableArray","keyCode","splice","_this2","map","item","src_TodoItem","key","onChange","onKeyDown","getTodoItems","ReactDOM","render","src_TodoList","document","getElementById"],"mappings":"8OA4BeA,cAvBd,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IAHFA,8EAKJ,IAAAU,EAEmBP,KAAKJ,MAA9BQ,EAFMG,EAENH,aACRA,EAHcG,EAEQC,wCAId,IAIAC,EAAYT,KAAKJ,MAAjBa,QAER,OACCC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaC,QAAWd,KAAKI,cAAeK,UArBtCM,IAAMC,WCyFdC,cApFd,SAAAA,EAAYrB,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiB,IACjBpB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmB,GAAAd,KAAAH,KAAMJ,KAEDsB,MAAQ,CACZC,KAAK,GACLC,WAAY,IAGbvB,EAAKwB,kBAAoBxB,EAAKwB,kBAAkBhB,KAAvBP,OAAAQ,EAAA,EAAAR,CAAAD,IACzBA,EAAKyB,gBAAkBzB,EAAKyB,gBAAgBjB,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAK0B,eAAiB1B,EAAK0B,eAAelB,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAK2B,cAAgB3B,EAAK2B,cAAcnB,KAAnBP,OAAAQ,EAAA,EAAAR,CAAAD,IAXJA,iFAaA4B,GACjBzB,KAAK0B,SAAS,CACbN,WAAYK,EAAEE,OAAOC,iDAMO,KAA1B5B,KAAKkB,MAAME,YACbpB,KAAK0B,SAAS,CACbP,KAAI,GAAAU,OAAA/B,OAAAgC,EAAA,EAAAhC,CAAKE,KAAKkB,MAAMC,MAAhB,CAAsBnB,KAAKkB,MAAME,aACrCA,WAAW,2CAMAK,GACI,KAAdA,EAAEM,SAA0C,KAA1B/B,KAAKkB,MAAME,YAC/BpB,KAAK0B,SAAS,CACbP,KAAI,GAAAU,OAAA/B,OAAAgC,EAAA,EAAAhC,CAAKE,KAAKkB,MAAMC,MAAhB,CAAsBnB,KAAKkB,MAAME,aACrCA,WAAW,6CAMEZ,GAGf,IAAMW,EAAIrB,OAAAgC,EAAA,EAAAhC,CAAOE,KAAKkB,MAAMC,MAC5BA,EAAKa,OAAOxB,EAAO,GACnBR,KAAK0B,SAAS,CACbP,gDAIY,IAAAc,EAAAjC,KACb,OACCA,KAAKkB,MAAMC,KAAKe,IAAI,SAACC,EAAK3B,GAGzB,OACCE,EAAAC,EAAAC,cAACwB,EAAD,CACChC,aAAgB6B,EAAKX,gBACrBe,IAAO7B,EACPC,QAAW0B,EACX3B,MAASA,uCAQX,OAGCE,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACfH,EAAAC,EAAAC,cAAA,WAECF,EAAAC,EAAAC,cAAA,SAAQgB,MAAS5B,KAAKkB,MAAME,WAAYkB,SAAYtC,KAAKqB,kBAAmBkB,UAAavC,KAAKwB,gBAC9Fd,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYC,QAAWd,KAAKuB,gBAA9C,QAEDb,EAAAC,EAAAC,cAAA,UAAKZ,KAAKwC,wBA/EMzB,IAAMC,iBCE7ByB,IAASC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,MAAcC,SAASC,eAAe","file":"static/js/main.3af6dbc6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass TodoItem extends React.Component{\r\n\t//子组件和父组件通信，需要调用父组件传递过来的方法,比如this.props.handleDelete\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handleDelete = this.handleDelete.bind(this);\r\n\t}\r\n\thandleDelete() {\r\n\t\t//this.props.handleDelete(this.props.index); y优化后如下面代码所示\r\n\t\tconst { handleDelete, index } =  this.props;\r\n\t\thandleDelete(index);\r\n\t}\r\n\r\n\trender() {\r\n\t\t//变量的解构赋值\r\n\t\t//对象的解构与数组有一个重要的不同。数组的元素是按次序排列的，变量的取值由它的位置决定；\r\n\t\t//而对象的属性没有次序，变量必须与属性同名，才能取到正确的值。\r\n\t\tconst { content } = this.props;\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<li className='style-item' onClick = {this.handleDelete}>{content}</li>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem'\r\n\r\n\r\n//function App() {\r\nclass TodoList extends React.Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tlist:[],\r\n\t\t\tinputValue: ''\r\n\t\t}\r\n\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t\tthis.handleItemClick = this.handleItemClick.bind(this);\r\n\t\tthis.handleBtnClick = this.handleBtnClick.bind(this);\r\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\r\n\t}\r\n\thandleInputChange(e){\r\n\t\tthis.setState({\r\n\t\t\tinputValue: e.target.value\r\n\t\t});\r\n\r\n\t}\r\n\r\n\thandleBtnClick(){\r\n\t\tif(this.state.inputValue !== ''){\r\n\t\t\tthis.setState({\r\n\t\t\t\tlist:[...this.state.list, this.state.inputValue],\r\n\t\t\t\tinputValue:''\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t}\r\n//解决input为空时的情况\r\n\thandleKeyDown(e){\r\n\t\tif(e.keyCode === 13&&this.state.inputValue !== ''){\r\n\t\t\tthis.setState({\r\n\t\t\t\tlist:[...this.state.list, this.state.inputValue],\r\n\t\t\t\tinputValue:''\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\thandleItemClick(index){\r\n\t\t//避免直接操作state，性能更优\r\n\t\t// ...为扩展运算符，将一个数组转换为用逗号分隔的参数序列\r\n\t\tconst list = [...this.state.list];\r\n\t\tlist.splice(index, 1);\r\n\t\tthis.setState({\r\n\t\t\tlist\r\n\t\t})\r\n\t}\r\n\r\n\tgetTodoItems(){\r\n\t\treturn(\r\n\t\t\tthis.state.list.map((item,index) =>{\r\n\t\t\t//return <li onClick={this.handleItemClick.bind(this, index)} key={index}>{item}</li>\r\n\t\t\t//key为循环要用的值，不会传递给子组件\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TodoItem \r\n\t\t\t\t\t\thandleDelete = {this.handleItemClick} \r\n\t\t\t\t\t\tkey = {index} \r\n\t\t\t\t\t\tcontent = {item} \r\n\t\t\t\t\t\tindex = {index}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t)\t\t\r\n\t}\r\n\r\n  render() {\r\n    return (\r\n    \t//返回一个jsx区块（包裹在一个封闭的标签里），不能返回两个\r\n    \t\r\n    \t<div className = 'main-div'>\r\n\t      <div>\r\n\t    \t\t{/*定义行内样式，使用style属性，外层的花括号代表是一个JS表达式，内层的{}表示是一个对象 style = {{borderColor:'red'}}*/}\r\n\t      \t<input  value = {this.state.inputValue} onChange = {this.handleInputChange} onKeyDown = {this.handleKeyDown}/>\r\n\t      \t<button className='style-btn' onClick = {this.handleBtnClick}>add</button>\r\n\t      </div>\r\n\t      <ul>{this.getTodoItems()}</ul>\r\n\t    </div>\r\n    )\r\n  }\r\n \r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n//把一个组件渲染到一个DOM节点上\r\nimport ReactDOM from 'react-dom';\r\n//App相当于一个自定义的react组件，大写字符开头\r\nimport TodoList from './TodoList.js';\r\nimport './style.css'\r\n\r\nReactDOM.render(<TodoList />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}